Python Course
=============

9:00  start
11:00 coffee
12:30 lunch 45 mins
2:30  tea
3:40  done

all my code is here: https://github.com/onionmccabbage/pythonFeb2023

Monday
> basics
> functions
> property decorator
> classes inheritance
> challenge exercise
> get data from and REST - API
> multi-threading
> managing returned data from threads
> try-except-finally

Tuesday
> complete the semaphore example
> get to the bottom of imports and modules (and namespacing)
> args and kwargs
> file i/o
> tuple comprehension, list compresension, dictionary comprehension
> doctest
> more use-cases...
> after lunch review
> explore actual scripts...

Wednesday
> the SWAPI exercise
> PEP8 is a good idea
> daemon thread (green thread), rpc
> override built-in operators
> consolidate threads - how to practically apply
> functional, procedural, class
> What code does, efficiency concerns and code style
> profiling your code - timeit, cprofile
> architecture, structure, and professional code best practice
> context manager
> the 'with' operator for iterables
> multi-processing and why it's rare
> range, generators, iter
> passing run-time arguments
> built-in and custom decorators
> more on testing: unittest
> pytest

Where to go from here:
  https://pynative.com/python-exercises-with-solutions/


https://www.transmedia.co.uk/feedback/   password ‘gateway’ 



